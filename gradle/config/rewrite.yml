type: specs.openrewrite.org/v1beta/recipe
name: org.junit.openrewrite.recipe.AddLicenseHeader
displayName: AddLicenseHeader
recipeList:
  - org.openrewrite.java.AddLicenseHeader:
    licenseText: """
      /*
       * Copyright 2015-${CURRENT_YEAR} the original author or authors.
       *
       * All rights reserved. This program and the accompanying materials are
       * made available under the terms of the Eclipse Public License v2.0 which
       * accompanies this distribution and is available at
       *
       * https://www.eclipse.org/legal/epl-v20.html
       */
      """
---
type: specs.openrewrite.org/v1beta/recipe
name: org.junit.openrewrite.recipe.Java21ForTests
displayName: Java21ForTests
preconditions:
  - org.openrewrite.java.search.IsLikelyTest
recipeList:
  - org.openrewrite.java.migrate.UpgradeToJava21
---
type: specs.openrewrite.org/v1beta/style
name: org.junit.openrewrite.recipe.NoTabsNoStarImports
styleConfigs:
  - org.openrewrite.java.style.TabsAndIndentsStyle:
      useTabCharacter: false
  - org.openrewrite.java.style.ImportLayoutStyle:
      classCountToUseStarImport: 9999
---
type: specs.openrewrite.org/v1beta/recipe
name: org.junit.openrewrite.recipe.CodeCleanup
displayName: Code cleanup
description: Automatically cleanup code, e.g. remove unnecessary parentheses, simplify expressions.
recipeList:
  - org.openrewrite.gradle.GradleBestPractices
  - org.openrewrite.java.format.EmptyNewlineAtEndOfFile
  - org.openrewrite.staticanalysis.DefaultComesLast
  - org.openrewrite.staticanalysis.EmptyBlock
  - org.openrewrite.staticanalysis.EqualsAvoidsNull
  - org.junit.openrewrite.recipe.AddLicenseHeader
  - org.junit.openrewrite.recipe.NoTabsNoStarImports
  - org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators
  - org.openrewrite.staticanalysis.MissingOverrideAnnotation
  - org.openrewrite.staticanalysis.ModifierOrder
  - org.openrewrite.text.EndOfLineAtEndOfFile
#      /**
#      * activeRecipe("org.openrewrite.java.RemoveUnusedImports") // there are (non); fails to analyze
#      * activeRecipe("org.openrewrite.java.format.AutoFormat") // could remove check, spot, and all other recipes if working
#      * activeRecipe("org.openrewrite.java.format.BlankLines") // IndexOutOfBoundsException: Index 0 out of bounds for length 0
#      * activeRecipe("org.openrewrite.java.format.NormalizeFormat")
#      * activeRecipe("org.openrewrite.java.format.NormalizeLineBreaks")
#      * activeRecipe("org.openrewrite.java.format.RemoveTrailingWhitespace")
#      * activeRecipe("org.openrewrite.java.format.Spaces")
#      * activeRecipe("org.openrewrite.java.format.TabsAndIndents")
#      * activeRecipe("org.openrewrite.java.format.WrappingAndBraces")
#      * activeRecipe("org.openrewrite.java.migrate.UpgradeToJava17")
#      * activeRecipe("org.openrewrite.java.testing.assertj.Assertj")
#      * activeRecipe("org.openrewrite.java.testing.cleanup.AssertTrueNullToAssertNull")
#      * activeRecipe("org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic")
#      * activeRecipe("org.openrewrite.java.testing.junit5.JUnit5BestPractices") // exclude legacy
#      * activeRecipe("org.openrewrite.staticanalysis.CodeCleanup")
#      * activeRecipe("org.openrewrite.staticanalysis.CommonStaticAnalysis")
#      * activeRecipe("org.openrewrite.staticanalysis.FinalizeLocalVariables")
#      * activeRecipe("org.openrewrite.staticanalysis.RedundantFileCreation")
#      * activeRecipe("org.openrewrite.staticanalysis.RemoveUnusedLocalVariables")
#      * activeRecipe("org.openrewrite.staticanalysis.RemoveUnusedPrivateFields")
#      * activeRecipe("org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods") // there are non; fails to analyze (even tho it worked once)
#      * activeRecipe("org.openrewrite.staticanalysis.StringLiteralEquality")
#      * activeRecipe("org.openrewrite.text.EndOfLineAtEndOfFile")
#      * activeRecipe("org.openrewrite.java.migrate.UpgradeToJava21")
#    */